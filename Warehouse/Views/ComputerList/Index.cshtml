@model Warehouse.Models.ComputerListModels
@using PagedList.Mvc;

<head>
    <link href="@Url.Content("~/Content/myStyle.css")" rel="stylesheet" type="text/css" />
    <link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />
</head>
@{
    Layout = "~/Views/Shared/_LayoutApplication.cshtml";
    <script src='https://kit.fontawesome.com/a076d05399.js'></script>
}

<h1>Choose computer and supplier</h1>
<div class="container-fluid">


    <h6>In this view you have opportunity to change various fields.</h6>
    <h6>In classic view changes notebook suppleries one by one.</h6>
    @Html.ActionLink("Change to classic view", "ClassicView", "ComputerList", new { @style = "padding-bottom:20px;" }, null)
    <br />
    @Html.ActionLink("Suppliers", "Index", "Supplier") |
    @Html.ActionLink("Edit", "Edit", "Supplier")
    <br />
    @Html.ActionLink("Computers", "Create", "ComputerList")

</div>

<div class="container-fluid">
    @using (Html.BeginForm("Search", "ComputerList", FormMethod.Post))
    {
        @Html.AntiForgeryToken()
        <p>
            Find by name: @Html.TextBox("SearchString")
            <input type="submit" value="Search" />
        </p>
    }
</div>



<div class="container-fluid">



    @using (Html.BeginForm("Index", "ComputerList", FormMethod.Post))
    {
        @Html.AntiForgeryToken()



        <table class="table" style="padding-top:20px">
            <tr>
                <th>
                    Name
                    <label style="padding-left:10px;">
                        <a href="@Url.Action("DescName","OrderByComputerList")">
                            <i style='font-size:15px;color:black' class='fas'>&#xf107;</i>
                        </a>

                        <a href="@Url.Action("AscName","OrderByComputerList")">
                            <i style='font-size:15px;color:black' class='fas'>&#xf106;</i>
                        </a>
                    </label>
                </th>

                <th>
                    Add supplier
                </th>
                <th>Selected supplier</th>
            </tr>



            @foreach (var item in Model.computerList)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Name)
                        @Html.HiddenFor(modelItem => item.Name)
                    </td>
                    @*<td>
                        @Html.DropDownListFor(x => x.SupplierName, Model.supplierList)
                        @Html.HiddenFor(x => x.SupplierName, Model.supplierList)
                    </td>*@
                <td>
                    @Html.DropDownList("suppliers")
                </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.SupplierName)
                        @Html.HiddenFor(modelItem => item.SupplierName)
                    </td>
                </tr>
            }


        </table>

        <input type="submit" value="Save changes" class="btn btn-primary" style="margin-left:10px" />



    }

</div>


<div class="container-fluid" style="margin-left:15px">
    Page @(ViewBag.pageCount < ViewBag.pageNumber ? 0 : ViewBag.pageNumber) of @ViewBag.pageCount

    @Html.PagedListPager(Model.computerList, page => Url.Action("Index", "ComputerList",
        new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
    @Html.ActionLink("Go back", "Index", "StartPage")
</div>



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}